import{_ as n,o as t,c as i,k as e,a as s}from"./chunks/framework.h9arENNx.js";const E=JSON.parse('{"title":"eslint","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/engineering/eslint.md","filePath":"front-end/engineering/eslint.md","lastUpdated":1712460773000}'),a={name:"front-end/engineering/eslint.md"},l=e("h1",{id:"eslint",tabindex:"-1"},[s("eslint "),e("a",{class:"header-anchor",href:"#eslint","aria-label":'Permalink to "eslint"'},"​")],-1),o=e("p",null,"ESLint 是在 ECMAScript/JavaScript 代码中识别和报告模式匹配的工具，它的目标是保证代码的一致性和避免错误。在许多方面，它和 JSLint、JSHint 相似，除了少数的例外：",-1),r=e("ol",null,[e("li",null,"ESLint 使用 Espree 解析 JavaScript。"),e("li",null,"ESLint 使用 AST 去分析代码中的模式"),e("li",null,"ESLint 是完全插件化的。每一个规则都是一个插件并且你可以在运行时添加更多的规则。")],-1),c=e("p",null,"在目录中存在package.json文件（可以使用npm init或yarn init创建）的前提下，运行安装和配置命令npm init @eslint/config后的目录中将有一个.eslintrc.{js,yml,json}文件。",-1),d=[l,o,r,c];function p(_,f,h,m,u,S){return t(),i("div",null,d)}const k=n(a,[["render",p]]);export{E as __pageData,k as default};
