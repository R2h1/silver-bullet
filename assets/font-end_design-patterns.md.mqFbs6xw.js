import{_ as n,D,o as l,c as p,I as h,w as k,a as s,R as i}from"./chunks/framework.buEibnTs.js";const t="/silver-bullet/assets/design-patterns-1.i01wzm_s.png",o=JSON.parse('{"title":"前端常用设计模式","description":"","frontmatter":{},"headers":[],"relativePath":"font-end/design-patterns.md","filePath":"font-end/design-patterns.md","lastUpdated":1701493925000}'),e={name:"font-end/design-patterns.md"},r=i('<h1 id="前端常用设计模式" tabindex="-1">前端常用设计模式 <a class="header-anchor" href="#前端常用设计模式" aria-label="Permalink to &quot;前端常用设计模式&quot;">​</a></h1><p>设计模式是通过代码设计经验总结出的解决问题的一系列套路。</p><h2 id="设计模式的原则-solid" tabindex="-1">设计模式的原则（SOLID） <a class="header-anchor" href="#设计模式的原则-solid" aria-label="Permalink to &quot;设计模式的原则（SOLID）&quot;">​</a></h2><ol><li><strong>单一职责原则（Single Responsibility Principle）</strong>：一个类或者模块只负责完成一个职责（或者功能）。避免将不相关的代码耦合在一起，提高了类或者模块的内聚性。</li><li><strong>开放封闭原则（Open Closed Principle）</strong>：软件实体（模块、类、方法等）应该对扩展开放、对修改关闭。</li><li><strong>里式替换原则（Liskov Substitution Principle）</strong>：子类对象能够替换程序中父类对象出现的任何地方，并且保证原来程序的逻辑行为不变及正确性不被破坏。</li><li><strong>接口隔离原则（Interface Segregation Principle）</strong>：接口的调用者不应该被强迫依赖它不需要的接口。</li><li><strong>依赖倒置原则（Dependency Inversion Principle）</strong>：高层模块不要依赖低层模块。即面向接口编程，依赖于抽象而不依赖于具体。</li></ol><p>Unix/Linux设计哲学：</p><ol><li>小即是美；让每个程序只做一件事；快速建立原型。</li><li>舍弃高效率，而更关注可移植性和可扩展性；采用纯文本方式来存储数据；充分利用软件得杠杆效应（软件复用、代码复用）。</li><li>避免强制性的用户界面；允许用户定制环境（考虑多环境、扩展性）；寻求90%的解决方案。</li></ol><h2 id="常用的-23-种设计模式" tabindex="-1">常用的 23 种设计模式 <a class="header-anchor" href="#常用的-23-种设计模式" aria-label="Permalink to &quot;常用的 23 种设计模式&quot;">​</a></h2>',7),C=i(`<p>创建型模式：</p><ol><li><strong>工厂模式</strong>（包括：工厂方法模式，抽象工厂模式，建造者模式）；</li><li><strong>单例模式</strong>；</li><li><strong>原型模式</strong>。</li></ol><p>结构型模式：</p><ol><li>适配器模式；</li><li><strong>装饰器模式</strong>；</li><li><strong>代理模式</strong>；</li><li>桥接模式；</li><li>组合模式；</li><li>享元模式。</li></ol><p>行为型模式：</p><ol><li><strong>策略模式</strong>；</li><li><strong>观察者模式</strong>；</li><li><strong>迭代器模式</strong>；</li><li>模板方法模式；</li><li>职责连模式；</li><li>命令模式；</li><li>备忘录模式；</li><li>状态模式；</li><li>访问者模式；</li><li>中介者模式；</li><li>解释器模式。</li></ol><h2 id="单例模式" tabindex="-1">单例模式 <a class="header-anchor" href="#单例模式" aria-label="Permalink to &quot;单例模式&quot;">​</a></h2><p><strong>保证一个类仅有一个实例，并提供一个访问它的全局访问点</strong>。单例模式能保证全局的唯一性，可以减少命名变量，单例模式在一定情况下可以节约内存，减少过多的类生成需要的内存和运行时间，把代码都放在一个类里面维护，实现了高内聚。</p><p><strong>优点</strong>是提供了对唯一实例的受控访问、避免对共享资源的多重占用、节约系统资源。<strong>缺点</strong>是扩展性差和职责过重。</p><p><strong>场景</strong>：</p><ol><li>(登录)弹窗；</li><li>Vuex的store；</li><li>自定义事件EventBus</li></ol><p><strong>注意</strong>：Java 是多线程，单例模式需要加线程锁 —— 而 JavaScript 是单线程，因此不用考虑同步锁的问题。</p><p><strong>模式实现</strong>：</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes dark-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> * js 利用代理实现单例</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> * </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">@param</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> className</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> * </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">@returns</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> */</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">function</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;"> singleton</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;">T</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;"> extends</span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;"> object</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">&gt;(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">className</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;">Constructor</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;">T</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">  let</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> instance</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;">T</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> | </span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;">null</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">null</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">  return</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;"> new</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;"> Proxy</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">className</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">, {</span></span>
<span class="line"><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">    construct</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">target</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">args</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">      return</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> instance</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> || (</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">instance</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">new</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;"> target</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(...</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">args</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">));</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">  });</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> * typescript 实现单例（不需要使用代理）</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> * const s1 = Singleton.getInstance();</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> * const s2 = Singleton.getInstance();</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> * console.log(s1 === s2); // true</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> */</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">class</span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;"> Singleton</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">  private</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;"> static</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> instance</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;">Singleton</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">  private</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;"> constructor</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">  public</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;"> static</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;"> getInstance</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> Singleton</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">instance</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> || (</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">Singleton</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">instance</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">new</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;"> Singleton</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">  someMethod</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">() {}</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> * 模块化实现单例</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> * </span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">  let instance // 闭包</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">  class Singleton {}</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">  // 外部只能 import 这个函数</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">  export default () =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">    return instance || (instance = new Singleton());</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> * 闭包实现单例</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> * </span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">  function genGetInstance() {</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">    let instance // 闭包</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">    class Singleton {}</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">    return () =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">      return instance || (instance = new Singleton());</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">  const getInstance = genGetInstance()</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">  const s1 = getInstance()</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">  const s2 = getInstance()</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;"> */</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><p><strong>惰性弹窗</strong>：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes dark-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;"> getSingleton</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">function</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">fn</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">  let</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> instance</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">null</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">  return</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;"> function</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(...</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">args</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> instance</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> || (</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">instance</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">fn</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">apply</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">args</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">)); </span><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">// 不存在才调用构造函数创建</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;"> createAlert</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">function</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">html</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">  let</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> dev</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">document</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">createElement</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;">&#39;div&#39;</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">  div</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">innerHTML</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">html</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">  div</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">style</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">display</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;">&#39;none&#39;</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">  document</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">body</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">appendChild</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">div</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">  return</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> div</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#4FC1FF;--shiki-dark:#4FC1FF;"> createSingleAlert</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">getSingleton</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">createAlert</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">document</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">body</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">addEvenListener</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;">&#39;click&#39;</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">function</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">  // 多次点击只会产生一个弹窗</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">  const</span><span style="--shiki-light:#4FC1FF;--shiki-dark:#4FC1FF;"> alertMessage</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">createSingleAlert</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;">&#39;请先注册/登录&#39;</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">  alertMessage</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">style</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">display</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;">&#39;block&#39;</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="观察者模式和发布-订阅模式" tabindex="-1">观察者模式和发布-订阅模式 <a class="header-anchor" href="#观察者模式和发布-订阅模式" aria-label="Permalink to &quot;观察者模式和发布-订阅模式&quot;">​</a></h2><p><img src="`+t+`" alt=""></p><p>在<strong>观察者模式</strong>中，观察者Observer需要直接订阅目标事件Subject；在目标发出内容改变的事件后，直接接收事件并作出响应，比如 addEventListener 绑定事件。</p><p>在<strong>发布订阅模式</strong>中，发布者publisher和订阅者subscriber之间加入一个事件通道Event Bus，Event Bus从发布者publisher接收事件，向订阅者subscriber发布事件；订阅者需要从事件通道订阅事件。比如，自定义事件，需要在代码中触发 emit。</p><p><strong>观察者模式场景</strong>：</p><ol><li>Vue和React的生命周期；</li><li>DOM事件；</li><li>Vue的watch选项；</li><li>Vue的组件更新过程；</li><li>各种异步回调：setTimeout、promise.then、nodejs的文件读取流；</li><li>MutationObserver。</li></ol><p><strong>观察者模式实现</strong>：</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes dark-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">// 目标</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">class</span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;"> Subject</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">  private</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> state</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;">number</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">  private</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> observers</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;">Observer</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">[] = [];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">  getState</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(): </span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;">number</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;"> this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">state</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">  setState</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">newState</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;">number</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">    this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">state</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">newState</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">    this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">notify</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(); </span><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">// 通知</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">  // 添加观察者</span></span>
<span class="line"><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">  attach</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">observer</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;">Observer</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">    this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">observers</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">push</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">observer</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">  // 通知</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">  private</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;"> notify</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">    this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">observers</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">forEach</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">o</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> o</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">update</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">state</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">));</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A9955;--shiki-dark:#6A9955;">// 观察者</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">class</span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;"> Observer</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">  name</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;">string</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">  constructor</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;">string</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">    this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">  update</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">state</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;">number</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;">\`</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">\${</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">}</span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;"> updated, state is </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">\${</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">state</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">}</span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;">\`</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#4FC1FF;--shiki-dark:#4FC1FF;"> sub</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">new</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;"> Subject</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#4FC1FF;--shiki-dark:#4FC1FF;"> observer1</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">new</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;"> Observer</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;">&#39;A&#39;</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#4FC1FF;--shiki-dark:#4FC1FF;"> observer2</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">new</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;"> Observer</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;">&#39;B&#39;</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">sub</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">attach</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">observer1</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">sub</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">attach</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">observer2</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">sub</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">setState</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p><strong>发布-订阅模式场景</strong>：</p><ol><li>自定义事件（Vue2 实例本身就支持自定义事件，但 Vue3 不再支持。Vue3 推荐使用 mitt，但mitt 没有 once，需要可以使用 event-emitter，在 Vue 和 React 组件中使用自定义事件，在组件销毁之前需要进行off，否则可能会导致内存泄漏，而且，off时要传入原来的函数，而不能是匿名函数）。</li><li>postMessage 通信。</li></ol><p><strong>优点</strong>是时间上解耦，可以实现异步、弱化对象实体间的引用关系，发布订阅模式中的事件通道可更细粒度处理。<strong>缺点</strong>是复杂场景不易追踪维护和理解，而且存在事件通道等额外时间内存开销。</p><p><strong>发布订阅模式实现</strong>：</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes dark-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">class</span><span style="--shiki-light:#4EC9B0;--shiki-dark:#4EC9B0;"> EventEmitter</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">  constructor</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">    this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">listeners</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = {};</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">  on</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">cb</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">options</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">    if</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> (</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">typeof</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> !== </span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;">&#39;string&#39;</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> || </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">typeof</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> cb</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> !== </span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;">&#39;function&#39;</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">return</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;"> false</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">    this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">listeners</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">] = </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">listeners</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">] || [];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">    this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">listeners</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">].</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">push</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">      cb</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">      priority:</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> options</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">priority</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> || </span><span style="--shiki-light:#B5CEA8;--shiki-dark:#B5CEA8;">0</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> () </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">      this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">listeners</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">listeners</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">filter</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">item</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> item</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">cb</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> !== </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">cb</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">    };</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">  off</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">cb</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">    if</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> (</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">typeof</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> !== </span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;">&#39;string&#39;</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> || </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">typeof</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> cb</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> !== </span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;">&#39;function&#39;</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">return</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;"> false</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">    if</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> (!</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">listeners</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">] || </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">listeners</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">].</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">length</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> === </span><span style="--shiki-light:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">return</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;"> false</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">    for</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> (</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">let</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> i</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">; </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> &lt; </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">listeners</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">].</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">length</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">; </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">++) {</span></span>
<span class="line"><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">      if</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> (</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">listeners</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">][</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">] === </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">cb</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">        this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">listeners</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">].</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">splice</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">      }</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">  emit</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">data</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">    if</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> (</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">typeof</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> !== </span><span style="--shiki-light:#CE9178;--shiki-dark:#CE9178;">&#39;string&#39;</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#C586C0;--shiki-dark:#C586C0;">return</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;"> false</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">    this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">listeners</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">] &amp;&amp;</span></span>
<span class="line"><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">      this</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">listeners</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">type</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">].</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">sort</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">a</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> a</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">priority</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;"> - </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">priority</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">).</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">forEach</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">item</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;"> item</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">cb</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#DCDCAA;--shiki-dark:#DCDCAA;">call</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#569CD6;--shiki-dark:#569CD6;">null</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#9CDCFE;--shiki-dark:#9CDCFE;">data</span><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">));</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"><span style="--shiki-light:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div>`,29);function g(d,y,c,b,E,F){const a=D("font");return l(),p("div",null,[r,h(a,{color:"red"},{default:k(()=>[s("加粗的是前端常用")]),_:1}),s("："),C])}const A=n(e,[["render",g]]);export{o as __pageData,A as default};
