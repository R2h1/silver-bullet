import{_ as t,o,c as e,R as a}from"./chunks/framework.buEibnTs.js";const m=JSON.parse('{"title":"HTML","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/basics/html/index.md","filePath":"front-end/basics/html/index.md","lastUpdated":1703083030000}'),r={name:"front-end/basics/html/index.md"},d=a('<h1 id="html" tabindex="-1">HTML <a class="header-anchor" href="#html" aria-label="Permalink to &quot;HTML&quot;">​</a></h1><p>HTML（超文本标记语言，<strong>H</strong>yper<strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage）不是编程语言，而是定义了网页内容的含义和结构的标记语言。“超文本”（hypertext）是指连接单个网站内或多个网站间的网页的链接。HTML 使用“标记”（markup）来注明文本、图片和其他内容，以便于在 Web 浏览器中显示。HTML由一系列元素组成，标签用于创建元素，标签里的元素名不区分大小写，但推荐将标签名全部小写。不包含任何内容的元素称为空元素，空元素不能存在结束标签，比如 <code>&lt;img /&gt;</code>。</p><h2 id="doctype" tabindex="-1">Doctype <a class="header-anchor" href="#doctype" aria-label="Permalink to &quot;Doctype&quot;">​</a></h2><p><code>&lt;!Doctype&gt;</code> 声明即文档类型定义（DTD），告知浏览器采用的文档解析标准，分为<strong>严格模式（标准模式——W3C标准）<strong>和</strong>混杂模式（兼容模式—向老版本兼容）</strong>，声明位置—HTML文档首行（<code>&lt;html&gt;</code> 标签之前），在HTML4 规定了三种不同的 <code>&lt;!DOCTYPE&gt;</code> 声明，分别是：Strict（严格模式）、Transitional和 Frameset，后两种声明下，若 DTD 不存在/格式不正确或没有最后的 URI 以混杂模式呈现，否则以严格模式呈现：</p><p><code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</code></p><p><code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</code></p><p><code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Frameset//EN&quot; &quot;http://www.w3.org/TR/html4/frameset.dtd&quot;&gt;</code></p><p>HTML5 与 HTML4 不同，不基于 SGML（Standard Generalized Markup Language 标准通用标记语言），也就不需要 DTD，因此 HTML5 仅标准模式 <code>&lt;!DOCTYPE html&gt;</code> 一种规范，没有严格和混杂之分。</p><p>通过 <strong><code>document.compatMode</code></strong> 可以输出当前文档的渲染模式是<strong>怪异/混杂/兼容模式（<code>BackCompat</code>）<strong>还是</strong>标准模式（<code>CSS1Compat</code>）</strong>。</p>',9),n=[d];function c(s,p,l,T,i,g){return o(),e("div",null,n)}const u=t(r,[["render",c]]);export{m as __pageData,u as default};
