import{_ as a,o as t,c as r,R as s}from"./chunks/framework.buEibnTs.js";const i="/silver-bullet/assets/1.6RMk4u2k.png",h=JSON.parse('{"title":"JavaScript","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/basics/javascript/index.md","filePath":"front-end/basics/javascript/index.md","lastUpdated":1703082751000}'),e={name:"front-end/basics/javascript/index.md"},n=s('<h1 id="javascript" tabindex="-1">JavaScript <a class="header-anchor" href="#javascript" aria-label="Permalink to &quot;JavaScript&quot;">​</a></h1><h2 id="关于javascript" tabindex="-1">关于JavaScript <a class="header-anchor" href="#关于javascript" aria-label="Permalink to &quot;关于JavaScript&quot;">​</a></h2><p>JavaScript（JS）是单线程的、基于原型的、弱类型的、动态类型的、轻量的、支持面向对象/命令式/声明式编程的、头等函数的、多范式的、解释性（直译式或即时编译）的、也可在非浏览器环境下使用的动态脚本语言。JavaScript区分大小写。JavaScript 中，通过在运行时给空对象附加方法和属性来创建对象并且可以作为创建相似对象的原型。</p><p>浏览器JavaScript由三部分组成：核心ECMAScript 描述了该语言的语法和基本对象；DOM 描述了处理网页内容的方法和接口；BOM 描述了与浏览器进行交互的方法和接口。</p><p>JavaScript 的动态特性包括运行时构造对象、可变参数列表、函数变量、动态脚本执行（通过 eval）、对象内枚举（通过 for ... in）和源码恢复（JavaScript 程序可以将函数反编译回源代码）。</p><p>JavaScript® 是 Oracle 在美国和其他国家的商标或注册商标。</p><h2 id="编译原理与编译过程" tabindex="-1">编译原理与编译过程 <a class="header-anchor" href="#编译原理与编译过程" aria-label="Permalink to &quot;编译原理与编译过程&quot;">​</a></h2><p>在代码执行之前会经历<strong>词法分析</strong>、<strong>语法分析</strong>和<strong>代码生成</strong>的编译阶段。</p><ol><li><strong>词法分析</strong>（<strong>Lexing</strong>）会将由字符组成的字符串分解成有意义的代码块即词法单元（Token）。</li><li><strong>语法分析</strong>（<strong>Parsing</strong>）是将词法单元流转换成一个<strong>由元素逐级嵌套所组成</strong>的代表了程序语法结构的树即抽象语法树（AST，Abstract Syntax Tree）。</li><li><strong>代码生成</strong>是将 AST 转换为可执行代码。</li></ol><p>V8 的执行过程：</p><p><img src="'+i+'" alt=""></p><p>源代码经过 Parser 解析器，经过词法分析和语法分析生成 AST；AST经过 Ignition 解释器生成字节码并执行；在执行过程中，如果发现热点代码，将热点代码交给 TurboFan 编译器生成机器码并执行；如果热点代码不再满足要求，进行去优化处理即还原成字节码并把执行权交还给 Ignition 解释器。</p>',12),o=[n];function c(p,l,d,_,g,S){return t(),r("div",null,o)}const f=a(e,[["render",c]]);export{h as __pageData,f as default};
