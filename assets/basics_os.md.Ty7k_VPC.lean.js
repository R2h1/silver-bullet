import{_ as n,D as l,o as i,c as a,k as t,a as o,I as g,w as e,R as r}from"./chunks/framework.buEibnTs.js";const p="/silver-bullet/assets/os-1.1AfasKii.png",h="/silver-bullet/assets/os-2.2895A57e.png",d="/silver-bullet/assets/os-3.kTycOpDE.png",c="/silver-bullet/assets/os-4.Y-3QwTzs.png",u="/silver-bullet/assets/os-5.1Fw67Lxd.png",P="/silver-bullet/assets/os-6.ipSsXoCf.png",L=JSON.parse('{"title":"操作系统","description":"","frontmatter":{},"headers":[],"relativePath":"basics/os.md","filePath":"basics/os.md","lastUpdated":1701493925000}'),_={name:"basics/os.md"},b=r("",30),m=r("",4),q=t("strong",null,"高响应比",-1),f=t("strong",null,"响应比[（已等待时间 + 要求运行时间）/ 要求运行时间 ]",-1),C=t("li",null,[t("strong",null,"多级反馈队列"),o(" ：将就绪队列再划（进程性质和类型）分成子队列，不同子队列采用适合自己队列进程性质的调度算法。"),t("strong",null,"是较好的进程调度算法（UNIX操作系统采用）"),o("。")],-1),x=r("",57);function k(U,T,I,S,v,w){const s=l("font");return i(),a("div",null,[b,t("ul",null,[m,t("li",null,[q,o("：按照高"),g(s,{color:"red"},{default:e(()=>[f]),_:1}),o("优先的原则，等待时间越长或运行时间越短响应比越高。")]),C]),x])}const O=n(_,[["render",k]]);export{L as __pageData,O as default};
