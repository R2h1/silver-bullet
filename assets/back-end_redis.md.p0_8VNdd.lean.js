import{_ as e,c as r,o as i,P as t}from"./chunks/framework.DI5ZwNtl.js";const d="/silver-bullet/assets/1.C6nHemSN.png",b=JSON.parse('{"title":"Redis","description":"","frontmatter":{},"headers":[],"relativePath":"back-end/redis.md","filePath":"back-end/redis.md","lastUpdated":1757767066000}'),s={name:"back-end/redis.md"};function l(o,a,h,n,c,u){return i(),r("div",null,[...a[0]||(a[0]=[t('<h1 id="redis" tabindex="-1">Redis <a class="header-anchor" href="#redis" aria-label="Permalink to &quot;Redis&quot;">​</a></h1><p>Redis 是基于内存的数据库，基于C语言实现，访问内存快于磁盘。每种数据类型具有读取和存储高效的数据结构实现。</p><p><img src="'+d+'" alt="">;</p><h2 id="redis基础" tabindex="-1">redis基础 <a class="header-anchor" href="#redis基础" aria-label="Permalink to &quot;redis基础&quot;">​</a></h2><h3 id="字符串string-——简单动态字符串-sds" tabindex="-1">字符串String ——简单动态字符串（SDS） <a class="header-anchor" href="#字符串string-——简单动态字符串-sds" aria-label="Permalink to &quot;字符串String ——简单动态字符串（SDS）&quot;">​</a></h3><ol><li>字符串长度处理</li><li>内存重新分配</li><li>二进制安全</li></ol><h3 id="列表list-——双端链表、压缩链表" tabindex="-1">列表List ——双端链表、压缩链表 <a class="header-anchor" href="#列表list-——双端链表、压缩链表" aria-label="Permalink to &quot;列表List ——双端链表、压缩链表&quot;">​</a></h3><h3 id="与-memcached-对比" tabindex="-1">与 Memcached 对比 <a class="header-anchor" href="#与-memcached-对比" aria-label="Permalink to &quot;与 Memcached 对比&quot;">​</a></h3><h2 id="redis缓存问题" tabindex="-1">redis缓存问题 <a class="header-anchor" href="#redis缓存问题" aria-label="Permalink to &quot;redis缓存问题&quot;">​</a></h2><h2 id="缓存" tabindex="-1">缓存 <a class="header-anchor" href="#缓存" aria-label="Permalink to &quot;缓存&quot;">​</a></h2><h3 id="缓存类型" tabindex="-1">缓存类型 <a class="header-anchor" href="#缓存类型" aria-label="Permalink to &quot;缓存类型&quot;">​</a></h3><h3 id="淘汰机制" tabindex="-1">淘汰机制 <a class="header-anchor" href="#淘汰机制" aria-label="Permalink to &quot;淘汰机制&quot;">​</a></h3><h2 id="redis高级" tabindex="-1">redis高级 <a class="header-anchor" href="#redis高级" aria-label="Permalink to &quot;redis高级&quot;">​</a></h2><h2 id="主从同步" tabindex="-1">主从同步 <a class="header-anchor" href="#主从同步" aria-label="Permalink to &quot;主从同步&quot;">​</a></h2><h2 id="持久化" tabindex="-1">持久化 <a class="header-anchor" href="#持久化" aria-label="Permalink to &quot;持久化&quot;">​</a></h2><h2 id="redis-集群" tabindex="-1">redis 集群 <a class="header-anchor" href="#redis-集群" aria-label="Permalink to &quot;redis 集群&quot;">​</a></h2>',16)])])}const q=e(s,[["render",l]]);export{b as __pageData,q as default};
